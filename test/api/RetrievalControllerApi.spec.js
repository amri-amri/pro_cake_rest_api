/*
 * ProCAKE Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProCakeRestApi);
  }
}(this, function(expect, ProCakeRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProCakeRestApi.RetrievalControllerApi();
  });

  describe('(package)', function() {
    describe('RetrievalControllerApi', function() {
      describe('getRetrievers', function() {
        it('should call getRetrievers successfully', function(done) {
          // TODO: uncomment getRetrievers call
          /*

          instance.getRetrievers(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('retrieve', function() {
        it('should call retrieve successfully', function(done) {
          // TODO: uncomment, update parameter values for retrieve call
          /*
          var retrieverID = "retrieverID_example";
          var cbid = "cbid_example";
          var opts = {};
          opts.addQueryToResults = true;
          opts.setSorting = true;
          opts.setTaskSize = 56;
          opts.body = "body_example";

          instance.retrieve(retrieverID, cbid, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('retrieveTextual', function() {
        it('should call retrieveTextual successfully', function(done) {
          // TODO: uncomment, update parameter values for retrieveTextual call
          /*
          var retrieverID = "retrieverID_example";
          var cbid = "cbid_example";
          var opts = {};
          opts.numberOfResults = 56;
          opts.setSorting = true;
          opts.setTaskSize = 56;
          opts.body = "body_example";

          instance.retrieveTextual(retrieverID, cbid, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
