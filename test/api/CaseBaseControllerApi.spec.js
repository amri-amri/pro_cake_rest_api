/*
 * ProCAKE Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ProCakeRestApi);
  }
}(this, function(expect, ProCakeRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ProCakeRestApi.CaseBaseControllerApi();
  });

  describe('(package)', function() {
    describe('CaseBaseControllerApi', function() {
      describe('addCaseBase', function() {
        it('should call addCaseBase successfully', function(done) {
          // TODO: uncomment, update parameter values for addCaseBase call
          /*
          var cbid = "cbid_example";
          var opts = {};
          opts.body = "body_example";

          instance.addCaseBase(cbid, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('addCaseToCaseBase', function() {
        it('should call addCaseToCaseBase successfully', function(done) {
          // TODO: uncomment, update parameter values for addCaseToCaseBase call
          /*
          var cbid = "cbid_example";
          var cid = "cid_example";
          var opts = {};
          opts.body = "body_example";

          instance.addCaseToCaseBase(cbid, cid, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getCaseBase', function() {
        it('should call getCaseBase successfully', function(done) {
          // TODO: uncomment, update parameter values for getCaseBase call
          /*
          var cbid = "cbid_example";

          instance.getCaseBase(cbid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getCaseFromCaseBase', function() {
        it('should call getCaseFromCaseBase successfully', function(done) {
          // TODO: uncomment, update parameter values for getCaseFromCaseBase call
          /*
          var cbid = "cbid_example";
          var cid = "cid_example";

          instance.getCaseFromCaseBase(cbid, cid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('removeCaseBase', function() {
        it('should call removeCaseBase successfully', function(done) {
          // TODO: uncomment, update parameter values for removeCaseBase call
          /*
          var cbid = "cbid_example";

          instance.removeCaseBase(cbid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('removeCaseFromCaseBase', function() {
        it('should call removeCaseFromCaseBase successfully', function(done) {
          // TODO: uncomment, update parameter values for removeCaseFromCaseBase call
          /*
          var cbid = "cbid_example";
          var cid = "cid_example";

          instance.removeCaseFromCaseBase(cbid, cid, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
