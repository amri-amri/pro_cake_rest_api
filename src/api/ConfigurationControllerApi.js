/*
 * ProCAKE Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.4
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DataClassModel', 'model/SMStringEqualModel', 'model/SMStringLevenshteinModel', 'model/SMStringNGramModel'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DataClassModel'), require('../model/SMStringEqualModel'), require('../model/SMStringLevenshteinModel'), require('../model/SMStringNGramModel'));
  } else {
    // Browser globals (root is window)
    if (!root.ProCakeRestApi) {
      root.ProCakeRestApi = {};
    }
    root.ProCakeRestApi.ConfigurationControllerApi = factory(root.ProCakeRestApi.ApiClient, root.ProCakeRestApi.DataClassModel, root.ProCakeRestApi.SMStringEqualModel, root.ProCakeRestApi.SMStringLevenshteinModel, root.ProCakeRestApi.SMStringNGramModel);
  }
}(this, function(ApiClient, DataClassModel, SMStringEqualModel, SMStringLevenshteinModel, SMStringNGramModel) {
  'use strict';

  /**
   * ConfigurationController service.
   * @module api/ConfigurationControllerApi
   * @version 1.0.4
   */

  /**
   * Constructs a new ConfigurationControllerApi. 
   * @alias module:api/ConfigurationControllerApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the addDataClass operation.
     * @callback module:api/ConfigurationControllerApi~addDataClassCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new DataClass
     * One of the following roles is required to access thi resource: ADMIN
     * @param {Object} opts Optional parameters
     * @param {module:model/DataClassModel} opts.body 
     * @param {module:api/ConfigurationControllerApi~addDataClassCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.addDataClass = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/xml'];
      var accepts = ['application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/configuration/dataclass', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteDataClass operation.
     * @callback module:api/ConfigurationControllerApi~deleteDataClassCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete DataClass
     * One of the following roles is required to access thi resource: ADMIN
     * @param {String} className 
     * @param {module:api/ConfigurationControllerApi~deleteDataClassCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteDataClass = function(className, callback) {
      var postBody = null;

      // verify the required parameter 'className' is set
      if (className === undefined || className === null) {
        throw new Error("Missing the required parameter 'className' when calling deleteDataClass");
      }


      var pathParams = {
        'className': className
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = [];
      var accepts = ['application/xml', 'application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/configuration/dataclass/{className}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMeasure operation.
     * @callback module:api/ConfigurationControllerApi~deleteMeasureCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete SimilarityMeasure
     * One of the following roles is required to access thi resource: ADMIN
     * @param {String} measureName 
     * @param {String} dataClass 
     * @param {module:api/ConfigurationControllerApi~deleteMeasureCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteMeasure = function(measureName, dataClass, callback) {
      var postBody = null;

      // verify the required parameter 'measureName' is set
      if (measureName === undefined || measureName === null) {
        throw new Error("Missing the required parameter 'measureName' when calling deleteMeasure");
      }

      // verify the required parameter 'dataClass' is set
      if (dataClass === undefined || dataClass === null) {
        throw new Error("Missing the required parameter 'dataClass' when calling deleteMeasure");
      }


      var pathParams = {
        'measureName': measureName,
        'dataClass': dataClass
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = [];
      var accepts = ['application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/configuration/similarityMeasure/{measureName}/{dataClass}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the sMStringEqual operation.
     * @callback module:api/ConfigurationControllerApi~sMStringEqualCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new StringEqual SimilarityMeasure
     * One of the following roles is required to access thi resource: ADMIN
     * @param {Object} opts Optional parameters
     * @param {module:model/SMStringEqualModel} opts.body 
     * @param {module:api/ConfigurationControllerApi~sMStringEqualCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.sMStringEqual = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/xml'];
      var accepts = ['application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/configuration/similarityMeasure/StringEqual', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the sMStringLevenshtein operation.
     * @callback module:api/ConfigurationControllerApi~sMStringLevenshteinCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new StringLevenshtein SimilarityMeasure
     * One of the following roles is required to access thi resource: ADMIN
     * @param {Object} opts Optional parameters
     * @param {module:model/SMStringLevenshteinModel} opts.body 
     * @param {module:api/ConfigurationControllerApi~sMStringLevenshteinCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.sMStringLevenshtein = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/xml'];
      var accepts = ['application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/configuration/similarityMeasure/StringLevenshtein', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the sMStringNGram operation.
     * @callback module:api/ConfigurationControllerApi~sMStringNGramCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create new StringNGram SimilarityMeasure
     * One of the following roles is required to access thi resource: ADMIN
     * @param {Object} opts Optional parameters
     * @param {module:model/SMStringNGramModel} opts.body 
     * @param {module:api/ConfigurationControllerApi~sMStringNGramCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.sMStringNGram = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basicAuth'];
      var contentTypes = ['application/xml'];
      var accepts = ['application/xml'];
      var returnType = null;

      return this.apiClient.callApi(
        '/configuration/similarityMeasure/StringNGram', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
